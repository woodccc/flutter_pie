///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
const String jsonKeyMovieDetailRating = "rating";
const String jsonKeyMovieDetailReviews_count = "reviews_count";
const String jsonKeyMovieDetailWish_count = "wish_count";
const String jsonKeyMovieDetailOriginal_title = "original_title";
const String jsonKeyMovieDetailBlooper_urls = "blooper_urls";
const String jsonKeyMovieDetailCollect_count = "collect_count";
const String jsonKeyMovieDetailImages = "images";
const String jsonKeyMovieDetailDouban_site = "douban_site";
const String jsonKeyMovieDetailYear = "year";
const String jsonKeyMovieDetailPopular_comments = "popular_comments";
const String jsonKeyMovieDetailAlt = "alt";
const String jsonKeyMovieDetailId = "id";
const String jsonKeyMovieDetailMobile_url = "mobile_url";
const String jsonKeyMovieDetailPhotos_count = "photos_count";
const String jsonKeyMovieDetailPubdate = "pubdate";
const String jsonKeyMovieDetailTitle = "title";
const String jsonKeyMovieDetailHas_video = "has_video";
const String jsonKeyMovieDetailShare_url = "share_url";
const String jsonKeyMovieDetailLanguages = "languages";
const String jsonKeyMovieDetailSchedule_url = "schedule_url";
const String jsonKeyMovieDetailWriters = "writers";
const String jsonKeyMovieDetailPubdates = "pubdates";
const String jsonKeyMovieDetailWebsite = "website";
const String jsonKeyMovieDetailTags = "tags";
const String jsonKeyMovieDetailHas_schedule = "has_schedule";
const String jsonKeyMovieDetailDurations = "durations";
const String jsonKeyMovieDetailGenres = "genres";
const String jsonKeyMovieDetailTrailers = "trailers";
const String jsonKeyMovieDetailTrailer_urls = "trailer_urls";
const String jsonKeyMovieDetailHas_ticket = "has_ticket";
const String jsonKeyMovieDetailBloopers = "bloopers";
const String jsonKeyMovieDetailCasts = "casts";
const String jsonKeyMovieDetailCountries = "countries";
const String jsonKeyMovieDetailMainland_pubdate = "mainland_pubdate";
const String jsonKeyMovieDetailPhotos = "photos";
const String jsonKeyMovieDetailSummary = "summary";
const String jsonKeyMovieDetailSubtype = "subtype";
const String jsonKeyMovieDetailDirectors = "directors";
const String jsonKeyMovieDetailComments_count = "comments_count";
const String jsonKeyMovieDetailPopular_reviews = "popular_reviews";
const String jsonKeyMovieDetailRatings_count = "ratings_count";
const String jsonKeyMovieDetailAka = "aka";
const String jsonKeyMovieDetailPopular_reviewsTitle = "title";
const String jsonKeyMovieDetailPopular_reviewsSubject_id = "subject_id";
const String jsonKeyMovieDetailPopular_reviewsAuthor = "author";
const String jsonKeyMovieDetailPopular_reviewsSummary = "summary";
const String jsonKeyMovieDetailPopular_reviewsAlt = "alt";
const String jsonKeyMovieDetailPopular_reviewsId = "id";
const String jsonKeyMovieDetailPopular_reviewsAuthorUid = "uid";
const String jsonKeyMovieDetailPopular_reviewsAuthorAvatar = "avatar";
const String jsonKeyMovieDetailPopular_reviewsAuthorSignature = "signature";
const String jsonKeyMovieDetailPopular_reviewsAuthorAlt = "alt";
const String jsonKeyMovieDetailPopular_reviewsAuthorId = "id";
const String jsonKeyMovieDetailPopular_reviewsAuthorName = "name";
class MovieDetailPopular_reviewsAuthor {
/*
 {
  "uid": "48369193",
  "avatar": "https://img3.doubanio.com/icon/u48369193-16.jpg",
  "signature": "",
  "alt": "https://www.douban.com/people/48369193/",
  "id": "48369193",
  "name": "二十二岛主"
} 
*/

  String uid;
  String avatar;
  String signature;
  String alt;
  String id;
  String name;

  MovieDetailPopular_reviewsAuthor({
    this.uid,
    this.avatar,
    this.signature,
    this.alt,
    this.id,
    this.name,
  });
  MovieDetailPopular_reviewsAuthor.fromJson(Map<String, dynamic> json) {
    uid = json[jsonKeyMovieDetailPopular_reviewsAuthorUid];
    avatar = json[jsonKeyMovieDetailPopular_reviewsAuthorAvatar];
    signature = json[jsonKeyMovieDetailPopular_reviewsAuthorSignature];
    alt = json[jsonKeyMovieDetailPopular_reviewsAuthorAlt];
    id = json[jsonKeyMovieDetailPopular_reviewsAuthorId];
    name = json[jsonKeyMovieDetailPopular_reviewsAuthorName];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data[jsonKeyMovieDetailPopular_reviewsAuthorUid] = uid;
    data[jsonKeyMovieDetailPopular_reviewsAuthorAvatar] = avatar;
    data[jsonKeyMovieDetailPopular_reviewsAuthorSignature] = signature;
    data[jsonKeyMovieDetailPopular_reviewsAuthorAlt] = alt;
    data[jsonKeyMovieDetailPopular_reviewsAuthorId] = id;
    data[jsonKeyMovieDetailPopular_reviewsAuthorName] = name;
    return data;
  }
}

class MovieDetailPopular_reviews {
/*
 {
  "title": "这个平安夜，注定会成为他们永难忘记的噩梦",
  "subject_id": "26816090",
  "author": {
    "uid": "48369193",
    "avatar": "https://img3.doubanio.com/icon/u48369193-16.jpg",
    "signature": "",
    "alt": "https://www.douban.com/people/48369193/",
    "id": "48369193",
    "name": "二十二岛主"
  },
  "summary": "看《沉默的证人》很容易想到一部银河映像的老片《大事件》，这不仅是因为两部电影中都有张家辉与任贤齐的正邪对立，还在于都将舞台设置在一个相对密闭的空间之内，《大事件》是一座大厦，而《沉默的证人》则是法...",
  "alt": "https://movie.douban.com/review/10388573/",
  "id": "10388573"
} 
*/

  String title;
  String subject_id;
  MovieDetailPopular_reviewsAuthor author;  String summary;
  String alt;
  String id;

  MovieDetailPopular_reviews({
    this.title,
    this.subject_id,
    this.author,
    this.summary,
    this.alt,
    this.id,
  });
  MovieDetailPopular_reviews.fromJson(Map<String, dynamic> json) {
    title = json[jsonKeyMovieDetailPopular_reviewsTitle];
    subject_id = json[jsonKeyMovieDetailPopular_reviewsSubject_id];
    author = json[jsonKeyMovieDetailPopular_reviewsAuthor] != null ? MovieDetailPopular_reviewsAuthor.fromJson(json[jsonKeyMovieDetailPopular_reviewsAuthor]) : null;
    summary = json[jsonKeyMovieDetailPopular_reviewsSummary];
    alt = json[jsonKeyMovieDetailPopular_reviewsAlt];
    id = json[jsonKeyMovieDetailPopular_reviewsId];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data[jsonKeyMovieDetailPopular_reviewsTitle] = title;
    data[jsonKeyMovieDetailPopular_reviewsSubject_id] = subject_id;
    if (author != null) {
      data['author'] = author.toJson();
    }
    data[jsonKeyMovieDetailPopular_reviewsSummary] = summary;
    data[jsonKeyMovieDetailPopular_reviewsAlt] = alt;
    data[jsonKeyMovieDetailPopular_reviewsId] = id;
    return data;
  }
}

const String jsonKeyMovieDetailDirectorsAvatars = "avatars";
const String jsonKeyMovieDetailDirectorsName_en = "name_en";
const String jsonKeyMovieDetailDirectorsName = "name";
const String jsonKeyMovieDetailDirectorsAlt = "alt";
const String jsonKeyMovieDetailDirectorsId = "id";
const String jsonKeyMovieDetailDirectorsAvatarsSmall = "small";
const String jsonKeyMovieDetailDirectorsAvatarsLarge = "large";
const String jsonKeyMovieDetailDirectorsAvatarsMedium = "medium";
class MovieDetailDirectorsAvatars {
/*
 {
  "small": "https://img3.doubanio.com/view/celebrity/s_ratio_celebrity/public/p21181.webp",
  "large": "https://img3.doubanio.com/view/celebrity/s_ratio_celebrity/public/p21181.webp",
  "medium": "https://img3.doubanio.com/view/celebrity/s_ratio_celebrity/public/p21181.webp"
} 
*/

  String small;
  String large;
  String medium;

  MovieDetailDirectorsAvatars({
    this.small,
    this.large,
    this.medium,
  });
  MovieDetailDirectorsAvatars.fromJson(Map<String, dynamic> json) {
    small = json[jsonKeyMovieDetailDirectorsAvatarsSmall];
    large = json[jsonKeyMovieDetailDirectorsAvatarsLarge];
    medium = json[jsonKeyMovieDetailDirectorsAvatarsMedium];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data[jsonKeyMovieDetailDirectorsAvatarsSmall] = small;
    data[jsonKeyMovieDetailDirectorsAvatarsLarge] = large;
    data[jsonKeyMovieDetailDirectorsAvatarsMedium] = medium;
    return data;
  }
}

class MovieDetailDirectors {
/*
 {
  "avatars": {
    "small": "https://img3.doubanio.com/view/celebrity/s_ratio_celebrity/public/p21181.webp",
    "large": "https://img3.doubanio.com/view/celebrity/s_ratio_celebrity/public/p21181.webp",
    "medium": "https://img3.doubanio.com/view/celebrity/s_ratio_celebrity/public/p21181.webp"
  },
  "name_en": "Renny Harlin",
  "name": "雷尼·哈林",
  "alt": "https://movie.douban.com/celebrity/1032052/",
  "id": "1032052"
} 
*/

  MovieDetailDirectorsAvatars avatars;  String name_en;
  String name;
  String alt;
  String id;

  MovieDetailDirectors({
    this.avatars,
    this.name_en,
    this.name,
    this.alt,
    this.id,
  });
  MovieDetailDirectors.fromJson(Map<String, dynamic> json) {
    avatars = json[jsonKeyMovieDetailDirectorsAvatars] != null ? MovieDetailDirectorsAvatars.fromJson(json[jsonKeyMovieDetailDirectorsAvatars]) : null;
    name_en = json[jsonKeyMovieDetailDirectorsName_en];
    name = json[jsonKeyMovieDetailDirectorsName];
    alt = json[jsonKeyMovieDetailDirectorsAlt];
    id = json[jsonKeyMovieDetailDirectorsId];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (avatars != null) {
      data['avatars'] = avatars.toJson();
    }
    data[jsonKeyMovieDetailDirectorsName_en] = name_en;
    data[jsonKeyMovieDetailDirectorsName] = name;
    data[jsonKeyMovieDetailDirectorsAlt] = alt;
    data[jsonKeyMovieDetailDirectorsId] = id;
    return data;
  }
}

const String jsonKeyMovieDetailPhotosThumb = "thumb";
const String jsonKeyMovieDetailPhotosImage = "image";
const String jsonKeyMovieDetailPhotosCover = "cover";
const String jsonKeyMovieDetailPhotosAlt = "alt";
const String jsonKeyMovieDetailPhotosId = "id";
const String jsonKeyMovieDetailPhotosIcon = "icon";
class MovieDetailPhotos {
/*
 {
  "thumb": "https://img3.doubanio.com/view/photo/m/public/p2562014894.webp",
  "image": "https://img3.doubanio.com/view/photo/l/public/p2562014894.webp",
  "cover": "https://img3.doubanio.com/view/photo/sqs/public/p2562014894.webp",
  "alt": "https://movie.douban.com/photos/photo/2562014894/",
  "id": "2562014894",
  "icon": "https://img3.doubanio.com/view/photo/s/public/p2562014894.webp"
} 
*/

  String thumb;
  String image;
  String cover;
  String alt;
  String id;
  String icon;

  MovieDetailPhotos({
    this.thumb,
    this.image,
    this.cover,
    this.alt,
    this.id,
    this.icon,
  });
  MovieDetailPhotos.fromJson(Map<String, dynamic> json) {
    thumb = json[jsonKeyMovieDetailPhotosThumb];
    image = json[jsonKeyMovieDetailPhotosImage];
    cover = json[jsonKeyMovieDetailPhotosCover];
    alt = json[jsonKeyMovieDetailPhotosAlt];
    id = json[jsonKeyMovieDetailPhotosId];
    icon = json[jsonKeyMovieDetailPhotosIcon];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data[jsonKeyMovieDetailPhotosThumb] = thumb;
    data[jsonKeyMovieDetailPhotosImage] = image;
    data[jsonKeyMovieDetailPhotosCover] = cover;
    data[jsonKeyMovieDetailPhotosAlt] = alt;
    data[jsonKeyMovieDetailPhotosId] = id;
    data[jsonKeyMovieDetailPhotosIcon] = icon;
    return data;
  }
}

const String jsonKeyMovieDetailCastsAvatars = "avatars";
const String jsonKeyMovieDetailCastsName_en = "name_en";
const String jsonKeyMovieDetailCastsName = "name";
const String jsonKeyMovieDetailCastsAlt = "alt";
const String jsonKeyMovieDetailCastsId = "id";
const String jsonKeyMovieDetailCastsAvatarsSmall = "small";
const String jsonKeyMovieDetailCastsAvatarsLarge = "large";
const String jsonKeyMovieDetailCastsAvatarsMedium = "medium";
class MovieDetailCastsAvatars {
/*
 {
  "small": "https://img1.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1382184082.17.webp",
  "large": "https://img1.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1382184082.17.webp",
  "medium": "https://img1.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1382184082.17.webp"
} 
*/

  String small;
  String large;
  String medium;

  MovieDetailCastsAvatars({
    this.small,
    this.large,
    this.medium,
  });
  MovieDetailCastsAvatars.fromJson(Map<String, dynamic> json) {
    small = json[jsonKeyMovieDetailCastsAvatarsSmall];
    large = json[jsonKeyMovieDetailCastsAvatarsLarge];
    medium = json[jsonKeyMovieDetailCastsAvatarsMedium];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data[jsonKeyMovieDetailCastsAvatarsSmall] = small;
    data[jsonKeyMovieDetailCastsAvatarsLarge] = large;
    data[jsonKeyMovieDetailCastsAvatarsMedium] = medium;
    return data;
  }
}

class MovieDetailCasts {
/*
 {
  "avatars": {
    "small": "https://img1.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1382184082.17.webp",
    "large": "https://img1.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1382184082.17.webp",
    "medium": "https://img1.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1382184082.17.webp"
  },
  "name_en": "Nick Cheung",
  "name": "张家辉",
  "alt": "https://movie.douban.com/celebrity/1037273/",
  "id": "1037273"
} 
*/

  MovieDetailCastsAvatars avatars;  String name_en;
  String name;
  String alt;
  String id;

  MovieDetailCasts({
    this.avatars,
    this.name_en,
    this.name,
    this.alt,
    this.id,
  });
  MovieDetailCasts.fromJson(Map<String, dynamic> json) {
    avatars = json[jsonKeyMovieDetailCastsAvatars] != null ? MovieDetailCastsAvatars.fromJson(json[jsonKeyMovieDetailCastsAvatars]) : null;
    name_en = json[jsonKeyMovieDetailCastsName_en];
    name = json[jsonKeyMovieDetailCastsName];
    alt = json[jsonKeyMovieDetailCastsAlt];
    id = json[jsonKeyMovieDetailCastsId];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (avatars != null) {
      data['avatars'] = avatars.toJson();
    }
    data[jsonKeyMovieDetailCastsName_en] = name_en;
    data[jsonKeyMovieDetailCastsName] = name;
    data[jsonKeyMovieDetailCastsAlt] = alt;
    data[jsonKeyMovieDetailCastsId] = id;
    return data;
  }
}

const String jsonKeyMovieDetailBloopersMedium = "medium";
const String jsonKeyMovieDetailBloopersTitle = "title";
const String jsonKeyMovieDetailBloopersSubject_id = "subject_id";
const String jsonKeyMovieDetailBloopersAlt = "alt";
const String jsonKeyMovieDetailBloopersSmall = "small";
const String jsonKeyMovieDetailBloopersResource_url = "resource_url";
const String jsonKeyMovieDetailBloopersId = "id";
class MovieDetailBloopers {
/*
 {
  "medium": "https://img3.doubanio.com/img/trailer/medium/2565078112.jpg?1565252944",
  "title": "花絮",
  "subject_id": "26816090",
  "alt": "https://movie.douban.com/trailer/251112/",
  "small": "https://img3.doubanio.com/img/trailer/small/2565078112.jpg?1565252944",
  "resource_url": "http://vt1.doubanio.com/201908151434/9916a0e9bcc175068d81a1d2e48934e9/view/movie/M/302510112.mp4",
  "id": "251112"
} 
*/

  String medium;
  String title;
  String subject_id;
  String alt;
  String small;
  String resource_url;
  String id;

  MovieDetailBloopers({
    this.medium,
    this.title,
    this.subject_id,
    this.alt,
    this.small,
    this.resource_url,
    this.id,
  });
  MovieDetailBloopers.fromJson(Map<String, dynamic> json) {
    medium = json[jsonKeyMovieDetailBloopersMedium];
    title = json[jsonKeyMovieDetailBloopersTitle];
    subject_id = json[jsonKeyMovieDetailBloopersSubject_id];
    alt = json[jsonKeyMovieDetailBloopersAlt];
    small = json[jsonKeyMovieDetailBloopersSmall];
    resource_url = json[jsonKeyMovieDetailBloopersResource_url];
    id = json[jsonKeyMovieDetailBloopersId];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data[jsonKeyMovieDetailBloopersMedium] = medium;
    data[jsonKeyMovieDetailBloopersTitle] = title;
    data[jsonKeyMovieDetailBloopersSubject_id] = subject_id;
    data[jsonKeyMovieDetailBloopersAlt] = alt;
    data[jsonKeyMovieDetailBloopersSmall] = small;
    data[jsonKeyMovieDetailBloopersResource_url] = resource_url;
    data[jsonKeyMovieDetailBloopersId] = id;
    return data;
  }
}

const String jsonKeyMovieDetailTrailersMedium = "medium";
const String jsonKeyMovieDetailTrailersTitle = "title";
const String jsonKeyMovieDetailTrailersSubject_id = "subject_id";
const String jsonKeyMovieDetailTrailersAlt = "alt";
const String jsonKeyMovieDetailTrailersSmall = "small";
const String jsonKeyMovieDetailTrailersResource_url = "resource_url";
const String jsonKeyMovieDetailTrailersId = "id";
class MovieDetailTrailers {
/*
 {
  "medium": "https://img3.doubanio.com/img/trailer/medium/2561780980.jpg?",
  "title": "内地预告片：硬刚到底定档版 (中文字幕)",
  "subject_id": "26816090",
  "alt": "https://movie.douban.com/trailer/249616/",
  "small": "https://img3.doubanio.com/img/trailer/small/2561780980.jpg?",
  "resource_url": "http://vt1.doubanio.com/201908151434/89bb11d41fd8227e417ff41b71846a80/view/movie/M/302490616.mp4",
  "id": "249616"
} 
*/

  String medium;
  String title;
  String subject_id;
  String alt;
  String small;
  String resource_url;
  String id;

  MovieDetailTrailers({
    this.medium,
    this.title,
    this.subject_id,
    this.alt,
    this.small,
    this.resource_url,
    this.id,
  });
  MovieDetailTrailers.fromJson(Map<String, dynamic> json) {
    medium = json[jsonKeyMovieDetailTrailersMedium];
    title = json[jsonKeyMovieDetailTrailersTitle];
    subject_id = json[jsonKeyMovieDetailTrailersSubject_id];
    alt = json[jsonKeyMovieDetailTrailersAlt];
    small = json[jsonKeyMovieDetailTrailersSmall];
    resource_url = json[jsonKeyMovieDetailTrailersResource_url];
    id = json[jsonKeyMovieDetailTrailersId];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data[jsonKeyMovieDetailTrailersMedium] = medium;
    data[jsonKeyMovieDetailTrailersTitle] = title;
    data[jsonKeyMovieDetailTrailersSubject_id] = subject_id;
    data[jsonKeyMovieDetailTrailersAlt] = alt;
    data[jsonKeyMovieDetailTrailersSmall] = small;
    data[jsonKeyMovieDetailTrailersResource_url] = resource_url;
    data[jsonKeyMovieDetailTrailersId] = id;
    return data;
  }
}

const String jsonKeyMovieDetailWritersAvatars = "avatars";
const String jsonKeyMovieDetailWritersName_en = "name_en";
const String jsonKeyMovieDetailWritersName = "name";
const String jsonKeyMovieDetailWritersAlt = "alt";
const String jsonKeyMovieDetailWritersId = "id";
const String jsonKeyMovieDetailWritersAvatarsSmall = "small";
const String jsonKeyMovieDetailWritersAvatarsLarge = "large";
const String jsonKeyMovieDetailWritersAvatarsMedium = "medium";
class MovieDetailWritersAvatars {
/*
 {
  "small": "https://img1.doubanio.com/f/movie/ca527386eb8c4e325611e22dfcb04cc116d6b423/pics/movie/celebrity-default-small.png",
  "large": "https://img3.doubanio.com/f/movie/63acc16ca6309ef191f0378faf793d1096a3e606/pics/movie/celebrity-default-large.png",
  "medium": "https://img1.doubanio.com/f/movie/8dd0c794499fe925ae2ae89ee30cd225750457b4/pics/movie/celebrity-default-medium.png"
} 
*/

  String small;
  String large;
  String medium;

  MovieDetailWritersAvatars({
    this.small,
    this.large,
    this.medium,
  });
  MovieDetailWritersAvatars.fromJson(Map<String, dynamic> json) {
    small = json[jsonKeyMovieDetailWritersAvatarsSmall];
    large = json[jsonKeyMovieDetailWritersAvatarsLarge];
    medium = json[jsonKeyMovieDetailWritersAvatarsMedium];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data[jsonKeyMovieDetailWritersAvatarsSmall] = small;
    data[jsonKeyMovieDetailWritersAvatarsLarge] = large;
    data[jsonKeyMovieDetailWritersAvatarsMedium] = medium;
    return data;
  }
}

class MovieDetailWriters {
/*
 {
  "avatars": {
    "small": "https://img1.doubanio.com/f/movie/ca527386eb8c4e325611e22dfcb04cc116d6b423/pics/movie/celebrity-default-small.png",
    "large": "https://img3.doubanio.com/f/movie/63acc16ca6309ef191f0378faf793d1096a3e606/pics/movie/celebrity-default-large.png",
    "medium": "https://img1.doubanio.com/f/movie/8dd0c794499fe925ae2ae89ee30cd225750457b4/pics/movie/celebrity-default-medium.png"
  },
  "name_en": "Mengzhang Wu",
  "name": "吴孟璋",
  "alt": "https://movie.douban.com/celebrity/1327609/",
  "id": "1327609"
} 
*/

  MovieDetailWritersAvatars avatars;  String name_en;
  String name;
  String alt;
  String id;

  MovieDetailWriters({
    this.avatars,
    this.name_en,
    this.name,
    this.alt,
    this.id,
  });
  MovieDetailWriters.fromJson(Map<String, dynamic> json) {
    avatars = json[jsonKeyMovieDetailWritersAvatars] != null ? MovieDetailWritersAvatars.fromJson(json[jsonKeyMovieDetailWritersAvatars]) : null;
    name_en = json[jsonKeyMovieDetailWritersName_en];
    name = json[jsonKeyMovieDetailWritersName];
    alt = json[jsonKeyMovieDetailWritersAlt];
    id = json[jsonKeyMovieDetailWritersId];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (avatars != null) {
      data['avatars'] = avatars.toJson();
    }
    data[jsonKeyMovieDetailWritersName_en] = name_en;
    data[jsonKeyMovieDetailWritersName] = name;
    data[jsonKeyMovieDetailWritersAlt] = alt;
    data[jsonKeyMovieDetailWritersId] = id;
    return data;
  }
}

const String jsonKeyMovieDetailPopular_commentsUseful_count = "useful_count";
const String jsonKeyMovieDetailPopular_commentsAuthor = "author";
const String jsonKeyMovieDetailPopular_commentsSubject_id = "subject_id";
const String jsonKeyMovieDetailPopular_commentsContent = "content";
const String jsonKeyMovieDetailPopular_commentsCreated_at = "created_at";
const String jsonKeyMovieDetailPopular_commentsId = "id";
const String jsonKeyMovieDetailPopular_commentsAuthorUid = "uid";
const String jsonKeyMovieDetailPopular_commentsAuthorAvatar = "avatar";
const String jsonKeyMovieDetailPopular_commentsAuthorSignature = "signature";
const String jsonKeyMovieDetailPopular_commentsAuthorAlt = "alt";
const String jsonKeyMovieDetailPopular_commentsAuthorId = "id";
const String jsonKeyMovieDetailPopular_commentsAuthorName = "name";
class MovieDetailPopular_commentsAuthor {
/*
 {
  "uid": "151374339",
  "avatar": "https://img1.doubanio.com/icon/u151374339-28.jpg",
  "signature": "",
  "alt": "https://www.douban.com/people/151374339/",
  "id": "151374339",
  "name": "谢盈萱"
} 
*/

  String uid;
  String avatar;
  String signature;
  String alt;
  String id;
  String name;

  MovieDetailPopular_commentsAuthor({
    this.uid,
    this.avatar,
    this.signature,
    this.alt,
    this.id,
    this.name,
  });
  MovieDetailPopular_commentsAuthor.fromJson(Map<String, dynamic> json) {
    uid = json[jsonKeyMovieDetailPopular_commentsAuthorUid];
    avatar = json[jsonKeyMovieDetailPopular_commentsAuthorAvatar];
    signature = json[jsonKeyMovieDetailPopular_commentsAuthorSignature];
    alt = json[jsonKeyMovieDetailPopular_commentsAuthorAlt];
    id = json[jsonKeyMovieDetailPopular_commentsAuthorId];
    name = json[jsonKeyMovieDetailPopular_commentsAuthorName];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data[jsonKeyMovieDetailPopular_commentsAuthorUid] = uid;
    data[jsonKeyMovieDetailPopular_commentsAuthorAvatar] = avatar;
    data[jsonKeyMovieDetailPopular_commentsAuthorSignature] = signature;
    data[jsonKeyMovieDetailPopular_commentsAuthorAlt] = alt;
    data[jsonKeyMovieDetailPopular_commentsAuthorId] = id;
    data[jsonKeyMovieDetailPopular_commentsAuthorName] = name;
    return data;
  }
}

class MovieDetailPopular_comments {
/*
 {
  "useful_count": 48,
  "author": {
    "uid": "151374339",
    "avatar": "https://img1.doubanio.com/icon/u151374339-28.jpg",
    "signature": "",
    "alt": "https://www.douban.com/people/151374339/",
    "id": "151374339",
    "name": "谢盈萱"
  },
  "subject_id": "26816090",
  "content": "剧情线条较为单一 整体节奏紧凑 演技部分在线 ",
  "created_at": "2019-07-28 23:19:33",
  "id": "1880249909"
} 
*/

  int useful_count;
  MovieDetailPopular_commentsAuthor author;  String subject_id;
  String content;
  String created_at;
  String id;

  MovieDetailPopular_comments({
    this.useful_count,
    this.author,
    this.subject_id,
    this.content,
    this.created_at,
    this.id,
  });
  MovieDetailPopular_comments.fromJson(Map<String, dynamic> json) {
    useful_count = json[jsonKeyMovieDetailPopular_commentsUseful_count];
    author = json[jsonKeyMovieDetailPopular_commentsAuthor] != null ? MovieDetailPopular_commentsAuthor.fromJson(json[jsonKeyMovieDetailPopular_commentsAuthor]) : null;
    subject_id = json[jsonKeyMovieDetailPopular_commentsSubject_id];
    content = json[jsonKeyMovieDetailPopular_commentsContent];
    created_at = json[jsonKeyMovieDetailPopular_commentsCreated_at];
    id = json[jsonKeyMovieDetailPopular_commentsId];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data[jsonKeyMovieDetailPopular_commentsUseful_count] = useful_count;
    if (author != null) {
      data['author'] = author.toJson();
    }
    data[jsonKeyMovieDetailPopular_commentsSubject_id] = subject_id;
    data[jsonKeyMovieDetailPopular_commentsContent] = content;
    data[jsonKeyMovieDetailPopular_commentsCreated_at] = created_at;
    data[jsonKeyMovieDetailPopular_commentsId] = id;
    return data;
  }
}

const String jsonKeyMovieDetailImagesSmall = "small";
const String jsonKeyMovieDetailImagesLarge = "large";
const String jsonKeyMovieDetailImagesMedium = "medium";
class MovieDetailImages {
/*
 {
  "small": "https://img3.doubanio.com/view/photo/s_ratio_poster/public/p2564369311.webp",
  "large": "https://img3.doubanio.com/view/photo/s_ratio_poster/public/p2564369311.webp",
  "medium": "https://img3.doubanio.com/view/photo/s_ratio_poster/public/p2564369311.webp"
} 
*/

  String small;
  String large;
  String medium;

  MovieDetailImages({
    this.small,
    this.large,
    this.medium,
  });
  MovieDetailImages.fromJson(Map<String, dynamic> json) {
    small = json[jsonKeyMovieDetailImagesSmall];
    large = json[jsonKeyMovieDetailImagesLarge];
    medium = json[jsonKeyMovieDetailImagesMedium];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data[jsonKeyMovieDetailImagesSmall] = small;
    data[jsonKeyMovieDetailImagesLarge] = large;
    data[jsonKeyMovieDetailImagesMedium] = medium;
    return data;
  }
}

const String jsonKeyMovieDetailRatingMax = "max";
const String jsonKeyMovieDetailRatingAverage = "average";
const String jsonKeyMovieDetailRatingStars = "stars";
const String jsonKeyMovieDetailRatingMin = "min";
class MovieDetailRating {
/*
 {
  "max": 10,
  "average": 6.7,
  "stars": "35",
  "min": 0
} 
*/

  int max;
  double average;
  String stars;
  int min;

  MovieDetailRating({
    this.max,
    this.average,
    this.stars,
    this.min,
  });
  MovieDetailRating.fromJson(Map<String, dynamic> json) {
    max = json[jsonKeyMovieDetailRatingMax];
    average = json[jsonKeyMovieDetailRatingAverage].toDouble();
    stars = json[jsonKeyMovieDetailRatingStars];
    min = json[jsonKeyMovieDetailRatingMin];
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data[jsonKeyMovieDetailRatingMax] = max;
    data[jsonKeyMovieDetailRatingAverage] = average;
    data[jsonKeyMovieDetailRatingStars] = stars;
    data[jsonKeyMovieDetailRatingMin] = min;
    return data;
  }
}

class MovieDetail {
/*
 {
  "rating": {
    "max": 10,
    "average": 6.7,
    "stars": "35",
    "min": 0
  },
  "reviews_count": 94,
  "wish_count": 31260,
  "original_title": "沉默的证人",
  "blooper_urls": [
    "http://vt1.doubanio.com/201908151434/9916a0e9bcc175068d81a1d2e48934e9/view/movie/M/302510112.mp4"
  ],
  "collect_count": 3404,
  "images": {
    "small": "https://img3.doubanio.com/view/photo/s_ratio_poster/public/p2564369311.webp",
    "large": "https://img3.doubanio.com/view/photo/s_ratio_poster/public/p2564369311.webp",
    "medium": "https://img3.doubanio.com/view/photo/s_ratio_poster/public/p2564369311.webp"
  },
  "douban_site": "",
  "year": "2019",
  "popular_comments": [
    {
      "useful_count": 48,
      "author": {
        "uid": "151374339",
        "avatar": "https://img1.doubanio.com/icon/u151374339-28.jpg",
        "signature": "",
        "alt": "https://www.douban.com/people/151374339/",
        "id": "151374339",
        "name": "谢盈萱"
      },
      "subject_id": "26816090",
      "content": "剧情线条较为单一 整体节奏紧凑 演技部分在线 ",
      "created_at": "2019-07-28 23:19:33",
      "id": "1880249909"
    }
  ],
  "alt": "https://movie.douban.com/subject/26816090/",
  "id": "26816090",
  "mobile_url": "https://movie.douban.com/subject/26816090/mobile",
  "photos_count": 171,
  "pubdate": "2019-08-16",
  "title": "沉默的证人",
  "has_video": false,
  "share_url": "https://m.douban.com/movie/subject/26816090",
  "languages": [
    "汉语普通话"
  ],
  "schedule_url": "https://movie.douban.com/subject/26816090/cinema/",
  "writers": [
    {
      "avatars": {
        "small": "https://img1.doubanio.com/f/movie/ca527386eb8c4e325611e22dfcb04cc116d6b423/pics/movie/celebrity-default-small.png",
        "large": "https://img3.doubanio.com/f/movie/63acc16ca6309ef191f0378faf793d1096a3e606/pics/movie/celebrity-default-large.png",
        "medium": "https://img1.doubanio.com/f/movie/8dd0c794499fe925ae2ae89ee30cd225750457b4/pics/movie/celebrity-default-medium.png"
      },
      "name_en": "Mengzhang Wu",
      "name": "吴孟璋",
      "alt": "https://movie.douban.com/celebrity/1327609/",
      "id": "1327609"
    }
  ],
  "pubdates": [
    "2019-03-18(香港国际电影节)"
  ],
  "website": "",
  "tags": [
    "悬疑"
  ],
  "has_schedule": true,
  "durations": [
    "94分钟"
  ],
  "genres": [
    "动作"
  ],
  "trailers": [
    {
      "medium": "https://img3.doubanio.com/img/trailer/medium/2561780980.jpg?",
      "title": "内地预告片：硬刚到底定档版 (中文字幕)",
      "subject_id": "26816090",
      "alt": "https://movie.douban.com/trailer/249616/",
      "small": "https://img3.doubanio.com/img/trailer/small/2561780980.jpg?",
      "resource_url": "http://vt1.doubanio.com/201908151434/89bb11d41fd8227e417ff41b71846a80/view/movie/M/302490616.mp4",
      "id": "249616"
    }
  ],
  "trailer_urls": [
    "http://vt1.doubanio.com/201908151434/89bb11d41fd8227e417ff41b71846a80/view/movie/M/302490616.mp4"
  ],
  "has_ticket": true,
  "bloopers": [
    {
      "medium": "https://img3.doubanio.com/img/trailer/medium/2565078112.jpg?1565252944",
      "title": "花絮",
      "subject_id": "26816090",
      "alt": "https://movie.douban.com/trailer/251112/",
      "small": "https://img3.doubanio.com/img/trailer/small/2565078112.jpg?1565252944",
      "resource_url": "http://vt1.doubanio.com/201908151434/9916a0e9bcc175068d81a1d2e48934e9/view/movie/M/302510112.mp4",
      "id": "251112"
    }
  ],
  "casts": [
    {
      "avatars": {
        "small": "https://img1.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1382184082.17.webp",
        "large": "https://img1.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1382184082.17.webp",
        "medium": "https://img1.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1382184082.17.webp"
      },
      "name_en": "Nick Cheung",
      "name": "张家辉",
      "alt": "https://movie.douban.com/celebrity/1037273/",
      "id": "1037273"
    }
  ],
  "countries": [
    "中国大陆"
  ],
  "mainland_pubdate": "2019-08-16",
  "photos": [
    {
      "thumb": "https://img3.doubanio.com/view/photo/m/public/p2562014894.webp",
      "image": "https://img3.doubanio.com/view/photo/l/public/p2562014894.webp",
      "cover": "https://img3.doubanio.com/view/photo/sqs/public/p2562014894.webp",
      "alt": "https://movie.douban.com/photos/photo/2562014894/",
      "id": "2562014894",
      "icon": "https://img3.doubanio.com/view/photo/s/public/p2562014894.webp"
    }
  ],
  "summary": "雨夜，香港法医中心遭遇一伙训练有素的悍匪的洗劫。来者挟持陈嘉豪（张家辉 饰）乔琳（杨紫 饰）两位法医，逼迫他们寻找一具特殊尸体并找出尸体体内的一颗子弹。法医在解剖的过程中发现，子弹事关一场黑帮血拼的大案，而匪首SANTA（任贤齐 饰）的身份也另有蹊跷。为了保护证物揭开真相，手无寸铁的陈嘉豪乔琳，利用身边一切可以利用的器械，和法医中心的特殊地势进行布局反击。逐渐被激怒的匪徒越发狂躁嗜血，陷入绝境的法医们，无畏楼毁人亡的危机，决心硬刚到底！",
  "subtype": "movie",
  "directors": [
    {
      "avatars": {
        "small": "https://img3.doubanio.com/view/celebrity/s_ratio_celebrity/public/p21181.webp",
        "large": "https://img3.doubanio.com/view/celebrity/s_ratio_celebrity/public/p21181.webp",
        "medium": "https://img3.doubanio.com/view/celebrity/s_ratio_celebrity/public/p21181.webp"
      },
      "name_en": "Renny Harlin",
      "name": "雷尼·哈林",
      "alt": "https://movie.douban.com/celebrity/1032052/",
      "id": "1032052"
    }
  ],
  "comments_count": 1350,
  "popular_reviews": [
    {
      "title": "这个平安夜，注定会成为他们永难忘记的噩梦",
      "subject_id": "26816090",
      "author": {
        "uid": "48369193",
        "avatar": "https://img3.doubanio.com/icon/u48369193-16.jpg",
        "signature": "",
        "alt": "https://www.douban.com/people/48369193/",
        "id": "48369193",
        "name": "二十二岛主"
      },
      "summary": "看《沉默的证人》很容易想到一部银河映像的老片《大事件》，这不仅是因为两部电影中都有张家辉与任贤齐的正邪对立，还在于都将舞台设置在一个相对密闭的空间之内，《大事件》是一座大厦，而《沉默的证人》则是法...",
      "alt": "https://movie.douban.com/review/10388573/",
      "id": "10388573"
    }
  ],
  "ratings_count": 3041,
  "aka": [
    "Bodies at Rest"
  ]
} 
*/

  MovieDetailRating rating;  int reviews_count;
  int wish_count;
  String original_title;
  List<String> blooper_urls;
  int collect_count;
  MovieDetailImages images;  String douban_site;
  String year;
  List<MovieDetailPopular_comments> popular_comments;
  String alt;
  String id;
  String mobile_url;
  int photos_count;
  String pubdate;
  String title;
  bool has_video;
  String share_url;
  List<String> languages;
  String schedule_url;
  List<MovieDetailWriters> writers;
  List<String> pubdates;
  String website;
  List<String> tags;
  bool has_schedule;
  List<String> durations;
  List<String> genres;
  List<MovieDetailTrailers> trailers;
  List<String> trailer_urls;
  bool has_ticket;
  List<MovieDetailBloopers> bloopers;
  List<MovieDetailCasts> casts;
  List<String> countries;
  String mainland_pubdate;
  List<MovieDetailPhotos> photos;
  String summary;
  String subtype;
  List<MovieDetailDirectors> directors;
  int comments_count;
  List<MovieDetailPopular_reviews> popular_reviews;
  int ratings_count;
  List<String> aka;

  MovieDetail({
    this.rating,
    this.reviews_count,
    this.wish_count,
    this.original_title,
    this.blooper_urls,
    this.collect_count,
    this.images,
    this.douban_site,
    this.year,
    this.popular_comments,
    this.alt,
    this.id,
    this.mobile_url,
    this.photos_count,
    this.pubdate,
    this.title,
    this.has_video,
    this.share_url,
    this.languages,
    this.schedule_url,
    this.writers,
    this.pubdates,
    this.website,
    this.tags,
    this.has_schedule,
    this.durations,
    this.genres,
    this.trailers,
    this.trailer_urls,
    this.has_ticket,
    this.bloopers,
    this.casts,
    this.countries,
    this.mainland_pubdate,
    this.photos,
    this.summary,
    this.subtype,
    this.directors,
    this.comments_count,
    this.popular_reviews,
    this.ratings_count,
    this.aka,
  });
  MovieDetail.fromJson(Map<String, dynamic> json) {
    rating = json[jsonKeyMovieDetailRating] != null ? MovieDetailRating.fromJson(json[jsonKeyMovieDetailRating]) : null;
    reviews_count = json[jsonKeyMovieDetailReviews_count];
    wish_count = json[jsonKeyMovieDetailWish_count];
    original_title = json[jsonKeyMovieDetailOriginal_title];
  if (json[jsonKeyMovieDetailBlooper_urls] != null) {
  var v = json[jsonKeyMovieDetailBlooper_urls];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v);
  });
    blooper_urls = arr0;
    }
    collect_count = json[jsonKeyMovieDetailCollect_count];
    images = json[jsonKeyMovieDetailImages] != null ? MovieDetailImages.fromJson(json[jsonKeyMovieDetailImages]) : null;
    douban_site = json[jsonKeyMovieDetailDouban_site];
    year = json[jsonKeyMovieDetailYear];
  if (json[jsonKeyMovieDetailPopular_comments] != null) {
  var v = json[jsonKeyMovieDetailPopular_comments];
  var arr0 = List<MovieDetailPopular_comments>();
  v.forEach((v) {
  arr0.add(MovieDetailPopular_comments.fromJson(v));
  });
    popular_comments = arr0;
    }
    alt = json[jsonKeyMovieDetailAlt];
    id = json[jsonKeyMovieDetailId];
    mobile_url = json[jsonKeyMovieDetailMobile_url];
    photos_count = json[jsonKeyMovieDetailPhotos_count];
    pubdate = json[jsonKeyMovieDetailPubdate];
    title = json[jsonKeyMovieDetailTitle];
    has_video = json[jsonKeyMovieDetailHas_video];
    share_url = json[jsonKeyMovieDetailShare_url];
  if (json[jsonKeyMovieDetailLanguages] != null) {
  var v = json[jsonKeyMovieDetailLanguages];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v);
  });
    languages = arr0;
    }
    schedule_url = json[jsonKeyMovieDetailSchedule_url];
  if (json[jsonKeyMovieDetailWriters] != null) {
  var v = json[jsonKeyMovieDetailWriters];
  var arr0 = List<MovieDetailWriters>();
  v.forEach((v) {
  arr0.add(MovieDetailWriters.fromJson(v));
  });
    writers = arr0;
    }
  if (json[jsonKeyMovieDetailPubdates] != null) {
  var v = json[jsonKeyMovieDetailPubdates];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v);
  });
    pubdates = arr0;
    }
    website = json[jsonKeyMovieDetailWebsite];
  if (json[jsonKeyMovieDetailTags] != null) {
  var v = json[jsonKeyMovieDetailTags];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v);
  });
    tags = arr0;
    }
    has_schedule = json[jsonKeyMovieDetailHas_schedule];
  if (json[jsonKeyMovieDetailDurations] != null) {
  var v = json[jsonKeyMovieDetailDurations];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v);
  });
    durations = arr0;
    }
  if (json[jsonKeyMovieDetailGenres] != null) {
  var v = json[jsonKeyMovieDetailGenres];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v);
  });
    genres = arr0;
    }
  if (json[jsonKeyMovieDetailTrailers] != null) {
  var v = json[jsonKeyMovieDetailTrailers];
  var arr0 = List<MovieDetailTrailers>();
  v.forEach((v) {
  arr0.add(MovieDetailTrailers.fromJson(v));
  });
    trailers = arr0;
    }
  if (json[jsonKeyMovieDetailTrailer_urls] != null) {
  var v = json[jsonKeyMovieDetailTrailer_urls];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v);
  });
    trailer_urls = arr0;
    }
    has_ticket = json[jsonKeyMovieDetailHas_ticket];
  if (json[jsonKeyMovieDetailBloopers] != null) {
  var v = json[jsonKeyMovieDetailBloopers];
  var arr0 = List<MovieDetailBloopers>();
  v.forEach((v) {
  arr0.add(MovieDetailBloopers.fromJson(v));
  });
    bloopers = arr0;
    }
  if (json[jsonKeyMovieDetailCasts] != null) {
  var v = json[jsonKeyMovieDetailCasts];
  var arr0 = List<MovieDetailCasts>();
  v.forEach((v) {
  arr0.add(MovieDetailCasts.fromJson(v));
  });
    casts = arr0;
    }
  if (json[jsonKeyMovieDetailCountries] != null) {
  var v = json[jsonKeyMovieDetailCountries];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v);
  });
    countries = arr0;
    }
    mainland_pubdate = json[jsonKeyMovieDetailMainland_pubdate];
  if (json[jsonKeyMovieDetailPhotos] != null) {
  var v = json[jsonKeyMovieDetailPhotos];
  var arr0 = List<MovieDetailPhotos>();
  v.forEach((v) {
  arr0.add(MovieDetailPhotos.fromJson(v));
  });
    photos = arr0;
    }
    summary = json[jsonKeyMovieDetailSummary];
    subtype = json[jsonKeyMovieDetailSubtype];
  if (json[jsonKeyMovieDetailDirectors] != null) {
  var v = json[jsonKeyMovieDetailDirectors];
  var arr0 = List<MovieDetailDirectors>();
  v.forEach((v) {
  arr0.add(MovieDetailDirectors.fromJson(v));
  });
    directors = arr0;
    }
    comments_count = json[jsonKeyMovieDetailComments_count];
  if (json[jsonKeyMovieDetailPopular_reviews] != null) {
  var v = json[jsonKeyMovieDetailPopular_reviews];
  var arr0 = List<MovieDetailPopular_reviews>();
  v.forEach((v) {
  arr0.add(MovieDetailPopular_reviews.fromJson(v));
  });
    popular_reviews = arr0;
    }
    ratings_count = json[jsonKeyMovieDetailRatings_count];
  if (json[jsonKeyMovieDetailAka] != null) {
  var v = json[jsonKeyMovieDetailAka];
  var arr0 = List<String>();
  v.forEach((v) {
  arr0.add(v);
  });
    aka = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    if (rating != null) {
      data['rating'] = rating.toJson();
    }
    data[jsonKeyMovieDetailReviews_count] = reviews_count;
    data[jsonKeyMovieDetailWish_count] = wish_count;
    data[jsonKeyMovieDetailOriginal_title] = original_title;
    if (blooper_urls != null) {
      var v = blooper_urls;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data[jsonKeyMovieDetailBlooper_urls] = arr0;
    }
    data[jsonKeyMovieDetailCollect_count] = collect_count;
    if (images != null) {
      data['images'] = images.toJson();
    }
    data[jsonKeyMovieDetailDouban_site] = douban_site;
    data[jsonKeyMovieDetailYear] = year;
    if (popular_comments != null) {
      var v = popular_comments;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v.toJson());
  });
      data[jsonKeyMovieDetailPopular_comments] = arr0;
    }
    data[jsonKeyMovieDetailAlt] = alt;
    data[jsonKeyMovieDetailId] = id;
    data[jsonKeyMovieDetailMobile_url] = mobile_url;
    data[jsonKeyMovieDetailPhotos_count] = photos_count;
    data[jsonKeyMovieDetailPubdate] = pubdate;
    data[jsonKeyMovieDetailTitle] = title;
    data[jsonKeyMovieDetailHas_video] = has_video;
    data[jsonKeyMovieDetailShare_url] = share_url;
    if (languages != null) {
      var v = languages;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data[jsonKeyMovieDetailLanguages] = arr0;
    }
    data[jsonKeyMovieDetailSchedule_url] = schedule_url;
    if (writers != null) {
      var v = writers;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v.toJson());
  });
      data[jsonKeyMovieDetailWriters] = arr0;
    }
    if (pubdates != null) {
      var v = pubdates;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data[jsonKeyMovieDetailPubdates] = arr0;
    }
    data[jsonKeyMovieDetailWebsite] = website;
    if (tags != null) {
      var v = tags;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data[jsonKeyMovieDetailTags] = arr0;
    }
    data[jsonKeyMovieDetailHas_schedule] = has_schedule;
    if (durations != null) {
      var v = durations;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data[jsonKeyMovieDetailDurations] = arr0;
    }
    if (genres != null) {
      var v = genres;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data[jsonKeyMovieDetailGenres] = arr0;
    }
    if (trailers != null) {
      var v = trailers;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v.toJson());
  });
      data[jsonKeyMovieDetailTrailers] = arr0;
    }
    if (trailer_urls != null) {
      var v = trailer_urls;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data[jsonKeyMovieDetailTrailer_urls] = arr0;
    }
    data[jsonKeyMovieDetailHas_ticket] = has_ticket;
    if (bloopers != null) {
      var v = bloopers;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v.toJson());
  });
      data[jsonKeyMovieDetailBloopers] = arr0;
    }
    if (casts != null) {
      var v = casts;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v.toJson());
  });
      data[jsonKeyMovieDetailCasts] = arr0;
    }
    if (countries != null) {
      var v = countries;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data[jsonKeyMovieDetailCountries] = arr0;
    }
    data[jsonKeyMovieDetailMainland_pubdate] = mainland_pubdate;
    if (photos != null) {
      var v = photos;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v.toJson());
  });
      data[jsonKeyMovieDetailPhotos] = arr0;
    }
    data[jsonKeyMovieDetailSummary] = summary;
    data[jsonKeyMovieDetailSubtype] = subtype;
    if (directors != null) {
      var v = directors;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v.toJson());
  });
      data[jsonKeyMovieDetailDirectors] = arr0;
    }
    data[jsonKeyMovieDetailComments_count] = comments_count;
    if (popular_reviews != null) {
      var v = popular_reviews;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v.toJson());
  });
      data[jsonKeyMovieDetailPopular_reviews] = arr0;
    }
    data[jsonKeyMovieDetailRatings_count] = ratings_count;
    if (aka != null) {
      var v = aka;
      var arr0 = List();
  v.forEach((v) {
  arr0.add(v);
  });
      data[jsonKeyMovieDetailAka] = arr0;
    }
    return data;
  }
}
